
services:
  postgres:
    container_name: temporal-ai-pipeline_db
    image: ankane/pgvector
    command: postgres -c 'max_connections=200'
    ports:
      - 5432:5432
    restart: always
    environment:
       - POSTGRES_HOST_AUTH_METHOD=trust
       - POSTGRES_PASSWORD=dbpassword
       - POSTGRES_USER=dbuser
       - POSTGRES_DB=vector_db

  localstack:
    container_name: temporal-ai-pipeline_localstack
    image: localstack/localstack:s3-latest
    ports:
      - 4566:4566
    environment:
      - DEBUG=${DEBUG:-0}
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=testUser
      - AWS_SECRET_ACCESS_KEY=testAccessKey
    volumes:
      - "${TMPDIR:-/tmp}/localstack:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"

  process-documents-worker:
    container_name: temporal-ai-pipeline_process-documents-worker
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      localstack:
        condition: service_healthy
      postgres:
        condition: service_started
    restart: always
    environment:
      - AWS_URL=http://localstack:4566
      - AWS_ACCESS_KEY_ID=testUser
      - AWS_SECRET_ACCESS_KEY=testAccessKey
      - DATABASE_CONNECTION_STRING=postgres://dbuser:dbpassword@postgres:5432/vector_db
      - DATABASE_TABLE_NAME=vector_db
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - TEMPORAL_HOST_URL=${TEMPORAL_HOST_URL}
      - TEMPORAL_CERT=${TEMPORAL_CERT}
      - TEMPORAL_CERT_KEY=${TEMPORAL_CERT_KEY}
      - NAMESPACE=${NAMESPACE}
    volumes:
      - ./src:/usr/src/app/src
    command: >
      sh -c '\
        sleep 10 \
        && npx nodemon --watch src --ext ts src/process-documents-worker.ts \
      '

  prompt-worker:
    container_name: temporal-ai-pipeline_invoke-prompt-worker
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      localstack:
        condition: service_healthy
      postgres:
        condition: service_started
    restart: always
    environment:
      - AWS_URL=http://localstack:4566
      - AWS_ACCESS_KEY_ID=testUser
      - AWS_SECRET_ACCESS_KEY=testAccessKey
      - DATABASE_CONNECTION_STRING=postgres://dbuser:dbpassword@postgres:5432/vector_db
      - DATABASE_TABLE_NAME=vector_db
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - TEMPORAL_HOST_URL=${TEMPORAL_HOST_URL}
      - TEMPORAL_CERT=${TEMPORAL_CERT}
      - TEMPORAL_CERT_KEY=${TEMPORAL_CERT_KEY}
      - NAMESPACE=${NAMESPACE}
    volumes:
      - ./src:/usr/src/app/src
    command: >
      sh -c '\
        sleep 10 \
        && npx nodemon --watch src --ext ts src/invoke-prompt-worker.ts \
      '

  test-prompts-worker:
    container_name: temporal-ai-pipeline_test-prompts-worker
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      localstack:
        condition: service_healthy
      postgres:
        condition: service_started
    restart: always
    environment:
      - AWS_URL=http://localstack:4566
      - AWS_ACCESS_KEY_ID=testUser
      - AWS_SECRET_ACCESS_KEY=testAccessKey
      - DATABASE_CONNECTION_STRING=postgres://dbuser:dbpassword@postgres:5432/vector_db
      - DATABASE_TABLE_NAME=vector_db
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - TEMPORAL_HOST_URL=${TEMPORAL_HOST_URL}
      - TEMPORAL_CERT=${TEMPORAL_CERT}
      - TEMPORAL_CERT_KEY=${TEMPORAL_CERT_KEY}
      - NAMESPACE=${NAMESPACE}
    volumes:
      - ./src:/usr/src/app/src
      - ./test:/usr/src/app/test
    command: >
      sh -c '\
        sleep 10 \
        && npx nodemon --watch src --ext ts src/test-prompts-worker.ts \
      '